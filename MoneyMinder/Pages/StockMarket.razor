@page "/stockmarket"

@inject NavigationManager NavManager
@inject CompoaniesScrapper Scrapit


<!--<div class="container">
    <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3">Custom colors and styling</RadzenText>
    <div class="row my-5">
        <div class="col-sm-12">
            <RadzenChart>
                <RadzenAreaSeries Stroke="rgb(236,72,127)" StrokeWidth="2" Fill="rgba(236,72,127,.5)" Data="@revenue.Where(r => r.Year == 2020)" CategoryProperty="Quarter" ValueProperty="Revenue">
                    <ChildContent>
                        <RadzenMarkers MarkerType="MarkerType.Circle" Fill="#fff" Stroke="rgba(236,72,127)" StrokeWidth="2" Size="8" />
                    </ChildContent>
                    <TooltipTemplate Context="data">
                        Revenue for <span>@data.Quarter</span> 2020: <strong>@data.Revenue.ToString("C0", CultureInfo.CreateSpecificCulture("en-US"))</strong>
                    </TooltipTemplate>
                </RadzenAreaSeries>
                <RadzenCategoryAxis>
                    <RadzenGridLines Visible="true" Stroke="#ccc" LineType="LineType.Dashed" />
                </RadzenCategoryAxis>
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                </RadzenValueAxis>
                <RadzenChartTooltipOptions Style="border: 1px solid rgb(236,72,127); background: #eee; color: #000;" />
                <RadzenLegend Visible="false" />
            </RadzenChart>
        </div>
    </div>
</div>-->


<div class="searchBar">
    <img class="border" src="interface_Images/Search.png" height="35" type="button" @onclick="search" />
    <input @bind-value="searchBox" class="enterSearch" placeholder="Search by title" />
</div>
<p>Searching for word '@searching'</p>
<p></p>

@if (true)
{
    //foreach (var comp in Companys)
    for (int i = 0;i<3;i++)
    {
        //int temp = i;
        /*<div class="companyFrame" type="button" @onclick="@(e=>clilckedOnCompany(temp))">*/
        <div class="companyFrame" type="button" @onclick="@(e=>clilckedOnCompany(CompanyName))">
            
            <form></form>
            <div class="companyLabel/">
                <img class="companyLabel" src="@imageSource" alt="Company Label" />
                <div class="comanyInformation">
                    <h4>@CompanyName</h4>
                    <p class="darkGray">CN</p>
                    <p> </p>
                    <p>$54.21 NZD</p>
                </div>
            </div>
        </div>
    }
}

@code {
    //IEnumerable<ColorScheme> colorSchemes = Enum.GetValues(typeof(ColorScheme)).Cast<ColorScheme>();
    //ColorScheme colorScheme = ColorScheme.Palette;

    private string imageSource = "CompanyLabels/image.jpg";
    private string CompanyName = "Company name";
    private string searchBox = "";
    private string searching = "empty";
    private List<string> Companys = new List<string>();

    protected override async Task OnInitializedAsync()
       {
       Companys = await Scrapit.DoScrapping();
       }
    public void clilckedOnCompany(string company)
    {
        NavManager.NavigateTo("/company/" + company);
    }
    public void search()
    {
        searching = searchBox;
    }

    //commented original code!!!!
    /*
     * @layout MainLayout //add as 1st row
     *
     * @using MoneyMinder.Data
    @using Radzen.Blazor
    @using System.Globalization;
    */
    /*class DataItem
    {
        public int Year { get; set; }
        public string Quarter { get; set; }
        public double Revenue { get; set; }
    }

    /*string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    IList<DataItem> revenue = new List<DataItem>();

    /*protected override void OnInitialized()
    {
        var random = new Random();

        for (var year = 2013; year <= 2020; year++)
        {
            for (var quarter = 1; quarter <= 4; quarter++)
            {
                revenue.Add(new DataItem
                    {
                        Year = year,
                        Quarter = $"Q{quarter}",
                        Revenue = random.NextDouble() * 200000
                    });
            }
        }
    }*/


   
}
