@layout MainLayout
@page "/Home"
@using Microsoft.AspNetCore.Identity;
@using MoneyMinder.Data
@using MoneyMinder.Model;
@inject CompaniesScrapper Scrapit
@inject IDataAccessService DataAccessService
@inject UserManager<IdentityUser> _userManager
@inject SignInManager<IdentityUser> SignInManager

<div class="profile_container">
    <div class="profile_info_container">
        <h1 class="profile_title">My Profile</h1>
        @if (isFirstNameClicked)
        {
            <div class="profile_content_container">
                <p class="heading_spacing">First Name: </p>
                <div class="change_input_container">
                    <input type="text" class="change_input" placeholder="Enter new first name" @bind="Current.FirstName">
                    <button class="change_input_check" @onclick="changeFirstNameClicked">✓</button>
                </div>
            </div>
        }
        else
        {
            <div class="profile_content_container">
                <p class="heading_spacing">First Name: </p>
                @if (Current != null)
                {
                    <p class="content_spacing">@Current.FirstName</p>
                }
                else
                {
                    <p class="content_spacing">Loading...</p>
                }
                <button class="btn_in_profile" @onclick="changeFirstNameClicked">Change</button>
            </div>
        }
        @if (isLastNameClicked)
        {
            <div class="profile_content_container">
                <p class="heading_spacing">Last Name: </p>
                <div class="change_input_container">
                    <input type="text" class="change_input" placeholder="Enter new last name" @bind="Current.LastName">
                    <button class="change_input_check" @onclick="changeLastNameClicked">✓</button>
                </div>
            </div>
        }
        else
        {
            <div class="profile_content_container">
                <p class="heading_spacing">Last Name: </p>
                @if (Current != null)
                {
                    <p class="content_spacing">@Current.LastName</p>
                }
                else
                {
                    <p class="content_spacing">Loading...</p>
                }
                <button class="btn_in_profile" @onclick="changeLastNameClicked">Change</button>
            </div>
        }

        <div class="profile_content_container">
            <p class="heading_spacing">Email: </p>
            @if (Current != null)
            {
                <p class="content_spacing">@Current.Email</p>
            }
            else
            {
                <p class="content_spacing">Loading...</p>
            }
        </div>

        <br />
        <h2 class="profile_title">Bank Accounts</h2>
        @if (!viewBankAccounts)
        {
            <div class="register_account_btn_container">
                <p class="register_btn_spacing"></p>
                <button class="btn_in_profile" @onclick="viewAccountsClicked">View Bank Accounts</button>
            </div>
        }

        @if(viewBankAccounts)
        {
            if (MyBankAccounts == null || MyBankAccounts.Count == 0)
            {
                if (isRegisterClicked)
                {
                    <div class="register_account_btn_container">
                        <p class="register_btn_spacing">Please input your account details</p>
                        <div class="change_input_container">
                            <input type="text" class="change_input" placeholder="Enter Account Name">
                            <input type="text" class="change_input" placeholder="Enter Account Number">
                            <button class="change_input_check" @onclick="registerClicked">✓</button>
                        </div>
                    </div>
                }
                else
                {
                    <div class="register_account_btn_container">
                        <p class="register_btn_spacing">You need to register a bank account!</p>
                        <button class="btn_in_profile" @onclick="registerClicked">Register</button>
                    </div>
                }
            }
            if (MyBankAccounts.Count > 0)
            {
                <div class="profile_content_container">
                    <div class="account_content_container">
                        <div class="account_number_container">
                            <p class="content_spacing">00-0000-0000000-00</p>
                            <button class="btn_in_profile">Delete</button>
                        </div>
                        <div class="account_number_container">
                            <p class="content_spacing">00-0000-0000000-01</p>
                            <button class="btn_in_profile">Delete</button>
                        </div>
                        <div class="account_number_container">
                            <p class="content_spacing">00-0000-0000000-02</p>
                            <button class="btn_in_profile">Delete</button>
                           </div>
                           
                        @if (isRegisterClicked)
                        {
                             <div class="account_number_container">
                                  <div class="change_input_container">
                                    <input type="text" class="change_input" placeholder="Enter new account number">
                                    <button class="change_input_check" @onclick="registerClicked">✓</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="register_account_btn">
                                <button class="btn_in_profile" @onclick="registerClicked">Register</button>
                            </div>
                        }
                        </div>
                    </div>
                }
            }
        @if (!isDeleteAccountClicked)
        {
            <div class="delete_account_container">
                <button class="delete_account_btn">Delete Profile</button>
            </div>
        }
    </div>
</div>

@code 
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private User Current;
    private List<BankAccount> MyBankAccounts;

    async Task<string> getUsersEmail()
    {
        var user = (await authenticationStateTask).User;
        return user.Identity.Name;
    }

    protected override async Task OnInitializedAsync()
    {
        await Scrapit.DoScrapping();
        Current = DataAccessService.GetUser(await getUsersEmail());
        MyBankAccounts = DataAccessService.GetBankAccounts(Current.Email);
        StateHasChanged();
    }

    private bool isFirstNameClicked = false;
    private bool isLastNameClicked = false;
    private bool isRegisterClicked = false;
    private bool isDeleteAccountClicked = false;
    private bool viewBankAccounts = false;

    private void changeFirstNameClicked()
    {
        if (isFirstNameClicked == true)
        {
            DataAccessService.ChangeFirstName(Current.FirstName, Current.Email);
            isFirstNameClicked = false;
            StateHasChanged();
        }
        else
        {
            isFirstNameClicked = true;
        }
    }

    private void changeLastNameClicked()
    {
        if (isLastNameClicked == true)
        {
            DataAccessService.ChangeFirstName(Current.LastName, Current.Email);
            isLastNameClicked = false;
            StateHasChanged();
        }
        else
        {
            isLastNameClicked = true;
        }
    }

    private void viewAccountsClicked()
    {
        viewBankAccounts = !viewBankAccounts;
    }

    private void registerClicked()
    {
        isRegisterClicked = !isRegisterClicked;
    }

    public string ConvertAccountNumToString(int AccountNum)
    {
        return string.Format("{0:####-####-###}", AccountNum);
    }

    private void deleteAccountClicked()
    {

    }

    private void dontDeleteClicked()
    {
        
    }
}
